# Web Application Configuration - Enhanced Security + Session-Independent Refresh Tokens
# This version uses Okta Web Application with Authorization Code Flow + PKCE + Client Secret

# Application Configuration
PORT=6000
FLASK_DEBUG=True
FLASK_SECRET_KEY=webapp-oauth-app-secret

# Okta Web Application Configuration (Authorization Code Flow + PKCE + Client Secret)
# You need to create a new Okta Web Application (NOT SPA) to get these values
ISSUER_URL=https://your-okta-domain.okta.com/oauth2/your-auth-server-id
CLIENT_ID=0oavnuchikx8gDmcp697
CLIENT_SECRET=cE89rbwJ2u4KPh5xPqeBRq3bD1tnIGjkHTGGwgO2Hr6n1HxoZsx_JmArfbCET-N8
REDIRECT_URI=http://localhost:6000/callback
OAUTH_SCOPE=openid profile email offline_access

# Databricks SQL Endpoint Configuration
DATABRICKS_SERVER_HOSTNAME=your-workspace.cloud.databricks.com
DATABRICKS_HTTP_PATH=/sql/1.0/warehouses/your-warehouse-id

# Databricks Model Serving Configuration
MODEL_SERVING_ENDPOINT=https://your-workspace.cloud.databricks.com/serving-endpoints/your-model-name/invocations
MODEL_NAME=your-model-name
MODEL_MAX_TOKENS=256

# Note: 
# - CLIENT_SECRET is required for Web Applications (unlike SPAs)
# - DATABRICKS_HTTP_PATH is optional - users can specify warehouse ID in the UI
# - MODEL_SERVING_ENDPOINT should point to your Databricks model serving endpoint
# - Refresh tokens from Web Apps are session-independent (survive Okta web logout)
